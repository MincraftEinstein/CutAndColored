buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = "${mod_v}-${mc_v}"
group = "einstein.${modid}"
archivesBaseName = "${modid}"

mixin {
	add sourceSets.main, "${modid}.refmap.json"
	config "${modid}.mixins.json"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "${mc_v}"
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                cutandcolored {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

            mods {
                cutandcolored {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', archivesBaseName, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                cutandcolored {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/generated/resources'
            exclude '.cache'
        }
    }
}

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_v}-${forge_v}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf("curse.maven:jei-238222:${jei_v}")
//	implementation fg.deobf("curse.maven:crafttweaker-239197:3696628")
    implementation fg.deobf("curse.maven:catalogue-459701:${catalogue_v}")
    implementation fg.deobf("curse.maven:configured-457570:${configured_v}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "${modid}",
            "Specification-Vendor": "MincraftEinstein",
            "Specification-Version": "1",
            "Implementation-Title": "${modid}",
            "Implementation-Version": "${mod_v}",
            "Implementation-Vendor" :"MincraftEinstein",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    excludes.add('einstein/cutandcolored/data')
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
